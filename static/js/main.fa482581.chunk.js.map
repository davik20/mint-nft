{"version":3,"sources":["config.js","context/AppProvider.jsx","functions/getLogo.js","functions/utilities.js","styles/responsive.js","components/Navbar.jsx","components/NFTList.jsx","hooks/useClickOutside.js","functions/getIPFS.js","components/CreateNFT.jsx","components/NFTDisplay.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["config","mode","AppContext","createContext","AppContextUpdate","AppProvider","children","useState","showCreateModal","setShowCreateModal","web3","setWeb3","chainError","setChainError","loadingNFTs","setLoadingNFTs","account","setAccount","NFMintContract","setNFMintContract","setRand","NFTs","setNFTs","useEffect","window","ethereum","on","chainId","accounts","console","log","methods","getAllUserCollectibles","call","from","then","result","userNFTs","map","nft","JSON","parse","tokenURI","name","description","imageUrl","id","tokenId","catch","err","toast","connectWallet","a","request","method","Web3","eth","getAccounts","net","getId","contract","Contract","NFMintAbi","abi","WalletConnectProvider","infuraId","walletConnectProvider","enable","alert","message","Provider","value","handleCloseCreateModal","handleShowCreateModal","process","shortenAddress","address","split","slice","join","length","size","xs","smFinal","sm","lg","xl","Navbar","useContext","Container","style","backgroundColor","color","textAlign","padding","NavbarContainer","Logo","src","getLogo","AddNFT","onClick","Connect","Account","styled","div","device","Button","button","NFTList","marginBottom","List","NFT","height","width","display","justifyContent","alignItems","fontSize","className","ContractName","NFTName","margin","Skeleton","variant","index","useClickOutside","client","create","addData","data","Promise","resolve","reject","add","added","url","path","CreateNFT","loadingJokes","hash","setHash","showApproveModal","setShowApproveModal","image","setImage","preview","setPreview","uploadProgress","setUploadProgress","loading","setLoading","formError","setFormError","transactionSent","setTransactionSent","formErrorMessage","setFormErrorMessage","joke","setJoke","properties","form","setForm","modal","useRef","close","upload","reader","FileReader","readAsDataURL","onprogress","onloadend","onInputChange","target","prev","renderJokes","setInterval","number","Math","floor","random","handleCreateNFT","setTimeout","addDataToIPFS","NFTMetadata","addCollectible","stringify","send","gasPrice","utils","toWei","success","error","clearInterval","ConfirmationContainer","ConfirmationContent","marginRight","transtion","marginTop","fontWeight","rel","href","Content","ref","borderRadius","Body","InputContainer","Label","UploadImage","current","click","marginLeft","onChange","e","files","opacity","type","accept","onMouseOver","onMouseLeave","position","objectFit","Input","placeholder","TextArea","cols","rows","Title","Close","CloseIcon","input","textarea","NFTDisplay","searchBar","showCategory","setShowCategory","category","setCategory","Top","SearchBar","IconSearch","onFocus","border","onBlur","FilterBar","Expand","FilterOptions","el","ConnectAccount","SearchIcon","ExpandMoreIcon","HomeContainer","ProfileContainer","Img","img","Address","p","CopyIcon","FileCopyIcon","Home","App","AppComponent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"youcAIeA,EAJA,CACbC,KAAM,c,eCMKC,EAAaC,0BAEbC,EAAmBD,0BAmKjBE,I,gBAAAA,EAjKf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAA4CV,mBAAS,MAArD,mBAAOW,EAAP,KAAuBC,EAAvB,KACA,EAAwBZ,mBAAS,GAAjC,mBAAaa,GAAb,WAEA,EAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WAeR,OAdIC,OAAOC,WACTD,OAAOC,SAASC,GAAG,gBAAgB,SAACC,GACd,eAAhB3B,EAAOC,MAEPY,EADa,GAAXc,MAORH,OAAOC,SAASC,GAAG,mBAAmB,SAACE,GACrCX,EAAWW,EAAS,QAGjB,eACN,IAEHL,qBAAU,WACJL,GAAkBF,IACpBa,QAAQC,IAAIZ,GACZH,GAAe,GAEfG,EAAea,QACZC,uBAAuBhB,GACvBiB,KAAK,CAAEC,KAAMlB,IACbmB,MAAK,SAACC,GACL,IAAMC,EAAWD,EAAOE,KAAI,SAACC,GAC3B,MAAwCC,KAAKC,MAAMF,EAAIG,UAA/CC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,SAE3B,MAAO,CACLC,GAAIP,EAAIQ,QACRJ,OACAC,cACAC,eAIJvB,EAAQe,GACRtB,GAAe,MAEhBiC,OAAM,SAACC,GACNpB,QAAQC,IAAImB,GACZlC,GAAe,GACfmC,YAAM,2BAGX,CAAChC,EAAgBF,IAEpB,IAgBMmC,EAAa,uCAAG,0CAAAC,EAAA,mEAEd5B,OAAOC,SAFO,iCAGVD,OAAOC,SAAS4B,QAAQ,CAAEC,OAAQ,wBAHxB,cAIV5C,EAAO,IAAI6C,IAAK/B,OAAOC,UAJb,SAKOf,EAAK8C,IAAIC,cALhB,cAKV7B,EALU,OAOhBjB,EAAQD,GACRO,EAAWW,EAAS,IARJ,UAUClB,EAAK8C,IAAIE,IAAIC,QAVd,WAUVb,EAVU,OAYI,gBAAhB9C,EAAOC,KAZK,kCAaGS,EAAK8C,IAAIE,IAAIC,QAbhB,eAeRC,EAAW,IAAIlD,EAAK8C,IAAIK,SAC5BC,EAAUC,IACV,8CAGF5C,EAAkByC,GApBJ,WAuBI,eAAhB5D,EAAOC,KAvBK,oBAwBJ,GAAN6C,EAxBU,iBAyBZjC,GAAc,GAzBF,yCA2BKH,EAAK8C,IAAIE,IAAIC,QA3BlB,eA6BNC,EAAW,IAAIlD,EAAK8C,IAAIK,SAC5BC,EAAUC,IACV,8CAGF5C,EAAkByC,GAClB/C,GAAc,GAnCF,WAuCbW,OAAOC,SAvCM,kCAwCoB,IAAIuC,IAAsB,CAC5DC,SAAU,qCAzCI,eAwCVC,EAxCU,iBA2CVA,EAAsBC,SA3CZ,eA4CVzD,EAAO,IAAI6C,IAAKW,GA5CN,UA8COxD,EAAK8C,IAAIC,cA9ChB,QA8CV7B,EA9CU,OAgDhBjB,EAAQD,GACRO,EAAWW,EAAS,IAjDJ,0DAoDlBwC,MAAM,KAAMC,SACZxC,QAAQC,IAAI,KAAMuC,SAClBtD,GAAe,GAtDG,0DAAH,qDA0DnB,OACE,cAACb,EAAWoE,SAAZ,CACEC,MAAO,CACLlD,KAAMA,EACNb,kBACAE,OACAE,aACAI,UACAE,iBACAJ,eARJ,SAWE,cAACV,EAAiBkE,SAAlB,CACEC,MAAO,CACLC,uBAxFuB,WAC7B/D,GAAmB,IAwFbgE,sBArFsB,WACvBzD,EAIDJ,EACFwD,MAAM,mCAGR3D,GAAmB,GAPjB2D,MAAM,0CAoFFjB,gBACAjC,iBACAE,WANJ,SASGd,OCtKM,aACb,MAAM,GAAN,OAAUoE,YAAV,0BCDWC,EAAiB,SAACC,GAC7B,MAAM,GAAN,OAAUA,EAAQC,MAAM,IAAIC,MAAM,EAAG,IAAIC,KAAK,IAA9C,eAAwDH,EACrDC,MAAM,IACNC,MAAMF,EAAQI,OAAS,EAAGJ,EAAQI,OAAS,GAC3CD,KAAK,MCHJE,EAEK,QAFLA,EAGA,QAHAA,EAIA,SAJAA,EAKA,SAES,GACbC,GAAG,eAAD,OAPE,QAOF,KACFC,QAAQ,eAAD,OAAiBF,EAAjB,KACPG,GAAG,eAAD,OAAiBH,EAAjB,KACFI,GAAG,eAAD,OAAiBJ,EAAjB,KACFK,GAAG,eAAD,OAAiBL,EAAjB,MC8CWM,I,UAAAA,EArDf,WACE,MAAiDC,qBAAWpF,GAApDqE,EAAR,EAAQA,sBAAuBtB,EAA/B,EAA+BA,cAC/B,EAAgCqC,qBAAWtF,GAAnCU,EAAR,EAAQA,WAAYI,EAApB,EAAoBA,QAEpB,OACE,qCACG,IACD,eAACyE,EAAD,WACG7E,GACC,qBACE8E,MAAO,CACLC,gBAAiB,SACjBC,MAAO,QACPC,UAAW,SACXC,QAAS,SALb,+CAWF,eAACC,EAAD,WACE,eAACC,EAAD,WACE,uCACA,qBAAKC,IAAKC,SAGZ,eAACC,EAAD,CACEC,QAAS,WACHxF,EACFwD,MAAM,mCAGRK,KANJ,qBASW,QAETzD,GAAW,cAACqF,EAAD,CAASD,QAASjD,EAAlB,sBACZvC,GACC,eAACyF,EAAD,CAASX,MAAO,CAAEC,gBAAiB,SAAUC,MAAO,SAApD,UACG,IADH,cAEc,OAGf5E,IAAYJ,GACX,eAAC0F,EAAD,eAAW3B,EAAe3D,gBAShCyE,EAAYc,IAAOC,IAAV,mPAaTT,EAAkBQ,IAAOC,IAAV,yGAMfR,EAAOO,IAAOC,IAAV,0aAUcC,EAAOrB,GAQPqB,EAAOrB,IAiBlBsB,GAXCH,IAAOC,IAAV,qMAWWD,IAAOI,OAAV,8XAoBNR,EAASI,YAAOG,EAAPH,CAAH,qJAObF,EAAUE,YAAOG,EAAPH,CAAH,oEAGPD,EAAUC,IAAOC,IAAV,2HAGSC,EAAOrB,I,sDC9BdwB,OA7Gf,WACE,MAAmDpB,qBAAWtF,GAAtDmB,EAAR,EAAQA,KAA2BP,GAAnC,EAAcF,WAAd,EAA0BI,QAA1B,EAAmCF,aAC3B2D,EAA0Be,qBAAWpF,GAArCqE,sBACR,OACE,sCACI3D,GAA+B,IAAhBO,EAAK2D,QACpB,gCACE,oBAAGU,MAAO,CAAEG,UAAW,SAAUgB,aAAc,QAA/C,UACG,IADH,8DAIA,cAACC,GAAD,UACE,eAACC,GAAD,CACEX,QAAS,WACP3B,KAFJ,UAKE,sBACEiB,MAAO,CACLsB,OAAQ,MACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,UASG,IACD,cAAC,KAAD,CAAS1B,MAAO,CAAE2B,SAAU,cAE9B,sBAAKC,UAAU,UAAf,UACE,cAACC,GAAD,qBACA,cAACC,GAAD,oCAOT1G,GACC,eAACgG,GAAD,WACE,sBAAKpB,MAAO,CAAE+B,OAAQ,QAAtB,UACE,cAACC,GAAA,EAAD,CAAUC,QAAQ,OAAOV,MAAO,IAAKD,OAAQ,MAC7C,cAACU,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAUV,OAAQ,QAEpB,sBAAKtB,MAAO,CAAE+B,OAAQ,QAAtB,UACE,cAACC,GAAA,EAAD,CAAUC,QAAQ,OAAOV,MAAO,IAAKD,OAAQ,MAC7C,cAACU,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAUV,OAAQ,QAEpB,sBAAKtB,MAAO,CAAE+B,OAAQ,QAAtB,UACE,cAACC,GAAA,EAAD,CAAUC,QAAQ,OAAOV,MAAO,IAAKD,OAAQ,MAC7C,cAACU,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAUV,OAAQ,YAItBlG,GAAeO,EAAK2D,OAAS,GAC7B,eAAC8B,GAAD,WACE,eAACC,GAAD,CAAKX,QAAS,kBAAM3B,KAApB,UACE,qBACEiB,MAAO,CACLsB,OAAQ,MACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,KAAD,CAAS1B,MAAO,CAAE2B,SAAU,SAAWzB,MAAO,UAEhD,sBAAK0B,UAAU,UAAf,UACE,cAACC,GAAD,qBACA,cAACC,GAAD,+BAIHnG,EAAKiB,KAAI,WAAqBsF,GAArB,IAAGjF,EAAH,EAAGA,KAAME,EAAT,EAASA,SAAT,OACR,eAACkE,GAAD,WACE,cAAC,GAAD,UACE,qBAAKd,IAAKC,QAEZ,qBAAKD,IAAKpD,IACV,sBAAKyE,UAAU,UAAf,UACE,cAACC,GAAD,qBACA,cAACC,GAAD,UAAU7E,SAPJiF,aA8BhBd,GAAOP,IAAOC,IAAV,kEAKGO,GAAMR,IAAOC,IAAV,+4BAmCWC,EAAOrB,GAIPqB,EAAOtB,QAIPsB,EAAOvB,IAM5Bc,GAAOO,IAAOC,IAAV,sOAeGe,GAAehB,IAAOC,IAAV,sFAIZgB,GAAUjB,IAAOC,IAAV,uF,0CC5KLqB,I,8CCMTC,GAASC,kBAAO,sCAePC,GAbC,SAACC,GAEf,OADApG,QAAQC,IAAI,UACL,IAAIoG,SAAQ,SAACC,EAASC,GAC3BN,GACGO,IAAIJ,GACJ9F,MAAK,SAACmG,GACL,IAAMC,EAAG,sCAAkCD,EAAME,MACjDL,EAAQI,MAETvF,OAAM,SAACC,GAAD,OAASmF,EAAOnF,UC0WdwF,I,2BAAAA,GA9Xf,WACE,MACEjD,qBAAWtF,GADYgB,GAAzB,EAAQV,gBAAR,EAAyBU,gBAAgBF,EAAzC,EAAyCA,QAASN,EAAlD,EAAkDA,KAElD,EAAwCH,mBAAS,CAC/C,iDACA,6CACA,mCACA,oDACA,iEACA,sCACA,wBACA,kBACA,8EACA,iDACA,wCACA,0CAEA,8CAdF,mBAAOmI,EAAP,KAgBA,GAhBA,KAgB4ClD,qBAAWpF,IAA/CoE,EAAR,EAAQA,uBAAwBpD,EAAhC,EAAgCA,QAChC,EAAwBb,mBAAS,IAAjC,mBAAOoI,EAAP,KAAaC,EAAb,KACA,EAAgDrI,oBAAS,GAAzD,mBAAOsI,EAAP,KAAyBC,EAAzB,KACA,EAA0BvI,mBAAS,MAAnC,mBAAOwI,EAAP,KAAcC,EAAd,KACA,EAA8BzI,mBAAS,MAAvC,mBAAO0I,EAAP,KAAgBC,EAAhB,KACA,EAA4C3I,mBAAS,MAArD,mBAAO4I,EAAP,KAAuBC,EAAvB,KACA,EAA8B7I,oBAAS,GAAvC,mBAAO8I,EAAP,KAAgBC,EAAhB,KACA,EAAkC/I,oBAAS,GAA3C,mBAAOgJ,EAAP,KAAkBC,EAAlB,KACA,EAA8CjJ,oBAAS,GAAvD,mBAAOkJ,EAAP,KAAwBC,GAAxB,KACA,GAAkCnJ,oBAAS,GAA3C,qBACA,IADA,YACgDA,mBAAS,KAAzD,qBAAOoJ,GAAP,MAAyBC,GAAzB,MACA,GAAwBrJ,mBAAS,sDAAjC,qBAAOsJ,GAAP,MAAaC,GAAb,MAEA,GAAwBvJ,mBAAS,CAC/BoC,KAAM,GACNC,YAAa,GACbmH,WAAY,KAHd,qBAAOC,GAAP,MAAaC,GAAb,MAMA,GAAkC1J,oBAAS,GAA3C,qBACA,IADA,YAC8BA,mBAAS,IAAvC,qBACA,IADA,YACsBA,mBAAS,KAA/B,qBAEM2J,IAFN,YAEcC,iBAAO,OACfC,GAAQD,iBAAO,MACfE,GAASF,iBAAO,MACLA,iBAAO,IAIxB5I,qBAAU,WACR,GAAIwH,EAAO,CACT,IAAMuB,EAAS,IAAIC,WACnBD,EAAOE,cAAczB,GAErBuB,EAAOG,WAAa,WAClBrB,GAAkB,IAGpBkB,EAAOI,UAAY,WACjBxB,EAAWoB,EAAOlI,QAClBgH,GAAkB,OAGrB,CAACL,IACJ,IAAM4B,GAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACfrG,EAAgBqG,EAAhBrG,MAAO5B,EAASiI,EAATjI,KACfsH,IAAQ,SAACY,GACP,OAAO,2BACFA,GADL,kBAEGlI,EAAO4B,QAKRuG,GAAc,WAClBC,aAAY,WACV,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,SAAWzC,EAAa1D,QACvD8E,GAAQpB,EAAasC,MACpB,MAGCI,GAAe,uCAAG,sBAAAhI,EAAA,yDACjB4G,GAAKrH,MAASqH,GAAKpH,aAA2B,OAAZqG,EADjB,uBAEpBO,GAAa,GACbI,GAAoB,8BACpByB,YAAW,WACT7B,GAAa,KACZ,KANiB,0BAUtBV,GAAoB,GACpBQ,GAAW,GACXgC,GAAcvC,GACX5G,MAAK,SAACoG,GACL,IAAMgD,EAAc,CAClB5I,KAAMqH,GAAKrH,KACXC,YAAaoH,GAAKpH,YAClBC,SAAU0F,GAEZuC,KACA5J,EAAea,QACZyJ,eAAehJ,KAAKiJ,UAAUF,GAAcvK,GAC5C0K,KAAK,CACJxJ,KAAMlB,EACN2K,SAAUjL,EAAKkL,MAAMC,MAAM,MAAO,UAEnCnK,GAAG,mBAAmB,SAACiH,GACtB9G,QAAQC,IAAI6G,GACZe,IAAmB,GACnBd,EAAQD,MAETxG,MAAK,SAACC,GACLhB,EAAwB,IAAhB6J,KAAKE,UACbE,YAAW,WACTvC,GAAoB,GACpBtE,GAAuB,KACtB,KACH8E,GAAW,GACXpG,IAAM4I,QAAQ,4BAEdjK,QAAQC,IAAIM,MAEbY,OAAM,SAACC,GACNC,IAAM6I,MAAM,oBACZC,cAAclB,IACdhC,GAAoB,MAIxBjH,QAAQC,IAAIU,KAAKiJ,UAAUF,OAE5BvI,OAAM,SAACC,GACNpB,QAAQC,IAAImB,GACZuG,GAAa,GACbI,GACE,0EAEFd,GAAoB,GACpBuC,YAAW,WACT7B,GAAa,GACbI,GAAoB,MACnB,QA7De,2CAAH,qDAmErB,OACE,qCACGf,GACC,cAACoD,GAAD,UACE,eAACC,GAAD,CAAqB9F,QAAS,kBAAM0E,MAApC,UACE,mBAAGxD,UAAU,SAAb,0BAEA,mBAAGA,UAAU,UAAb,6CACC+B,GACC,sBAAK/B,UAAU,SAAf,UACE,mBACE5B,MAAO,CACLyG,YAAa,SACbvG,MAAO,OACPwG,UAAW,WAJf,SAOGvC,KAEH,mBAAGnE,MAAO,CAAEG,UAAW,SAAUwG,UAAW,QAA5C,SACE,cAAC,KAAD,CAAYpH,KAAM,GAAIW,MAAM,4BAKhCyD,GACA,oBAAG/B,UAAU,SAAb,UACE,oBACE5B,MAAO,CACLyG,YAAa,SACbvG,MAAO,OACPwG,UAAW,WAJf,UAOG,0BAA2B,OAE9B,mBAAG1G,MAAO,CAAEG,UAAW,SAAUwG,UAAW,QAA5C,SACE,cAAC,KAAD,CACE3G,MAAO,CACL2B,SAAU,OACVzB,MAAO,QACP0G,WAAY,eAMrB7C,GACC,8BACE,mBACE8C,IAAI,aACJ3B,OAAO,SACP4B,KAAI,0CAAqC7D,GAH3C,4BAMK,OAGT,mBAAGrB,UAAU,SAAb,sDAKN,cAAC,GAAD,UACE,eAACmF,GAAD,CAASC,IAAKxC,GAAd,UACGX,GACC,qBACE7D,MAAO,CACLC,gBAAiB,SACjBC,MAAO,QACPE,QAAS,SACT6G,aAAc,MACd9F,aAAc,QANlB,SASG8C,KAGL,eAAC,GAAD,WACE,4CACA,cAAC,GAAD,CAAOvD,QAAS5B,EAAwB6C,SAAU,aAEpD,eAACuF,GAAD,YACI3D,GACA,eAAC4D,GAAD,WACE,eAACC,GAAD,2BACe,qBAAKpH,MAAO,CAAEE,MAAO,OAArB,kBAEf,eAACmH,GAAD,WACE,mBAAGrH,MAAO,CAAEmB,aAAc,QAA1B,sBACA,cAAC,EAAD,CACET,QAAS,kBAAMiE,GAAO2C,QAAQC,SAC9BvH,MAAO,CAAEwH,WAAY,GAFvB,0BAMA,uBACEC,SAAU,SAACC,GACTpE,EAASoE,EAAExC,OAAOyC,MAAM,KAE1B3H,MAAO,CAAE4H,QAAS,GAClBZ,IAAKrC,GACLkD,KAAK,OACLC,OAAO,UACP1K,GAAG,kBAMTmG,GAAWE,GACX,8BACE,cAAC,KAAD,MAIHF,GACC,eAAC4D,GAAD,WACE,cAACC,GAAD,uBACA,qBACEpH,MAAO,CACLwB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,eAACL,GAAD,WACE,sBACEX,QAAS,WACP8C,EAAW,OAEbuE,YAAa,SAACL,GACZvL,QAAQC,IAAIsL,GACZA,EAAExC,OAAOlF,MAAMC,gBAAkB,kBACjCyE,GAAM4C,QAAQtH,MAAME,MAAQ,QAC5BwE,GAAM4C,QAAQtH,MAAM4H,QAAU,KAEhCI,aAAc,SAACN,GACbvL,QAAQC,IAAIsL,GACZA,EAAExC,OAAOlF,MAAMC,gBAAkB,cACjCyE,GAAM4C,QAAQtH,MAAM4H,QAAU,KAEhC5H,MAAO,CACLsB,OAAQ,MACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UApBhB,UAuBE,cAAC,IAAD,CACEsF,IAAKtC,GACL1E,MAAO,CACL2B,SAAU,QACVsG,SAAU,WACVL,QAAS,KAGb,qBACE5H,MAAO,CACLuB,MAAO,MACPD,OAAQ,MACR4G,UAAW,SAEb3H,IAAKgD,OAGT,sBAAK3B,UAAU,UAAf,UACE,cAACC,GAAD,sBACA,cAACC,GAAD,oCAMV,eAACqF,GAAD,WACE,eAACC,GAAD,mBACO,qBAAKpH,MAAO,CAAEE,MAAO,OAArB,kBAEP,cAACiI,GAAD,CACEV,SAAUxC,GACVhI,KAAK,OACL4B,MAAOyF,GAAKrH,KACZmL,YAAY,wBAIhB,eAACjB,GAAD,WACE,eAACC,GAAD,0BACc,qBAAKpH,MAAO,CAAEE,MAAO,OAArB,kBAEd,cAACmI,GAAD,CACEZ,SAAUxC,GACVhI,KAAK,cACL4B,MAAOyF,GAAKpH,YACZoL,KAAK,KACLC,KAAK,IACLH,YAAY,mCA2BhB,cAACpH,EAAD,CAAQN,QAASgF,GAAiB1F,MAAO,CAAE2G,UAAW,QAAtD,gCAYN5G,GAAYc,IAAOC,IAAV,gRAeTiG,GAAUlG,IAAOC,IAAV,gPAUSC,EAAOrB,IAKvB8I,GAAQ3H,IAAOC,IAAV,8MAWL2H,GAAQ5H,YAAO6H,IAAP7H,CAAH,kDAILqG,GAAOrG,IAAOC,IAAV,qDAIJqG,GAAiBtG,IAAOC,IAAV,sDAGdsG,GAAQvG,IAAOC,IAAV,sDAILqH,GAAQtH,IAAO8H,MAAV,+MAYLN,GAAWxH,IAAO+H,SAAV,+MAWRvB,GAAcxG,IAAOC,IAAV,2LASXyF,GAAwB1F,YAAOd,GAAPc,CAAH,+CAIrB2F,GAAsB3F,YAAOkG,GAAPlG,CAAH,6YAQHE,EAAOrB,I,+DCtbdmJ,I,kBAAAA,GAvDf,WACE,IAAMC,EAAYrE,iBAAO,MACzB,EAAwC5J,oBAAS,GAAjD,mBAAOkO,EAAP,KAAqBC,EAArB,KACA,EAAgCnO,mBAAS,IAAzC,mBAAOoO,EAAP,KAAiBC,EAAjB,KACA,EAAgCpJ,qBAAWtF,GAAnCc,EAAR,EAAQA,QACR,OADA,EAAiBJ,WAEf,eAAC,GAAD,WACGI,GACC,eAAC6N,GAAD,WACE,eAACC,GAAD,CAAWpC,IAAK8B,EAAhB,UACE,cAACO,GAAD,CAAY1H,SAAU,UACtB,uBACE2H,QAAS,WACPR,EAAUxB,QAAQtH,MAAMuJ,OAAS,+BAEnCC,OAAQ,WACNV,EAAUxB,QAAQtH,MAAMuJ,OAAS,gCAEnC1B,KAAK,OACLO,YAAY,cAGhB,eAACqB,GAAD,CAAW/I,QAAS,kBAAMsI,GAAiBD,IAA3C,UACE,4BAAKE,GAAW,aAChB,cAACS,GAAD,IAECX,GACC,cAACY,GAAD,UACG,CAAC,eAAe/M,KAAI,SAACgN,EAAI1H,GAAL,OACnB,mBACElC,MAAO,CACLE,MAAO0J,GAAMX,GAAY,qBAE3BvI,QAAS,kBAAMwI,EAAYU,IAJ7B,SAMGA,eAQdtO,GACC,cAAC,GAAD,UACE,cAAC,GAAD,OAGFA,GACA,cAACuO,GAAD,wDAQFA,GAAiBhJ,IAAOC,IAAV,uIAOdf,GAAYc,IAAOC,IAAV,gMASTqI,GAAMtI,IAAOC,IAAV,gDAIHsI,GAAYvI,IAAOC,IAAV,6UAmBTuI,GAAaxI,YAAOiJ,KAAPjJ,CAAH,kEAIV4I,GAAY5I,IAAOC,IAAV,4VAaOC,EAAOrB,IAQvBgK,GAAS7I,YAAOkJ,KAAPlJ,CAAH,wFAKN8I,GAAgB9I,IAAOC,IAAV,oaAsBbiG,GAAUlG,IAAOC,IAAV,qDC3Hb,I,GAAMkJ,GAAgBnJ,IAAOC,IAAV,4BAEbmJ,GAAmBpJ,IAAOC,IAAV,izBAyChBiG,GAAUlG,IAAOC,IAAV,oEAKPoJ,GAAMrJ,IAAOsJ,IAAV,sKAYHC,GAAUvJ,IAAOwJ,EAAV,6FAMPC,GAAWzJ,YAAO0J,KAAP1J,CAAH,4DAGC2J,GA/Ff,WACE,MAAqC1K,qBAAWtF,GAAxCM,EAAR,EAAQA,gBAAiBQ,EAAzB,EAAyBA,QACzB,OACE,mCACE,eAAC0O,GAAD,WACGlP,GAAmB,cAAC,GAAD,IACpB,cAACmP,GAAD,UACE,gCACE,cAACC,GAAD,CAAK3J,IAAG,UAAKvB,YAAL,sBAEP1D,GACC,eAAC8O,GAAD,WACE,+BAAOnL,EAAe3D,KADxB,IACyC,cAACgP,GAAD,YAM/C,cAAC,GAAD,UACE,cAAC,GAAD,YCAKG,OAjBf,WAKE,OACE,eAAC,EAAD,WACE,cAAC,IAAD,IAEA,eAACC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,WAQFA,GAAe7J,IAAOC,IAAV,wEChBE6J,QACW,cAA7B7O,OAAO8O,SAASC,UAEe,UAA7B/O,OAAO8O,SAASC,UAEhB/O,OAAO8O,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5O,MAAK,SAAA6O,GACjCA,EAAaC,kB","file":"static/js/main.fa482581.chunk.js","sourcesContent":["const config = {\n  mode: \"production\",\n};\n\nexport default config;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport NFMintAbi from \"../contracts/NFMint.json\";\nimport config from \"../config\";\nimport toast from \"react-hot-toast\";\n\nexport const AppContext = createContext();\n\nexport const AppContextUpdate = createContext();\n\nfunction AppProvider({ children }) {\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [chainError, setChainError] = useState(false);\n  const [loadingNFTs, setLoadingNFTs] = useState(false);\n  const [account, setAccount] = useState(\"\");\n  const [NFMintContract, setNFMintContract] = useState(null);\n  const [rand, setRand] = useState(0);\n\n  const [NFTs, setNFTs] = useState([]);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", (chainId) => {\n        if (config.mode === \"production\") {\n          if (chainId == 4) {\n            setChainError(false);\n          } else {\n            setChainError(true);\n          }\n        }\n      });\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setAccount(accounts[0]);\n      });\n    }\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    if (NFMintContract && account) {\n      console.log(NFMintContract);\n      setLoadingNFTs(true);\n\n      NFMintContract.methods\n        .getAllUserCollectibles(account)\n        .call({ from: account })\n        .then((result) => {\n          const userNFTs = result.map((nft) => {\n            const { name, description, imageUrl } = JSON.parse(nft.tokenURI);\n\n            return {\n              id: nft.tokenId,\n              name,\n              description,\n              imageUrl,\n            };\n          });\n\n          setNFTs(userNFTs);\n          setLoadingNFTs(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoadingNFTs(false);\n          toast(\"An error occurred\");\n        });\n    }\n  }, [NFMintContract, account]);\n\n  const handleCloseCreateModal = () => {\n    setShowCreateModal(false);\n  };\n\n  const handleShowCreateModal = () => {\n    if (!account) {\n      alert(\"You are not connected, please connect\");\n      return;\n    }\n    if (chainError) {\n      alert(\"Please Select the rinkeby chain\");\n      return;\n    }\n    setShowCreateModal(true);\n  };\n\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        const web3 = new Web3(window.ethereum);\n        const accounts = await web3.eth.getAccounts();\n\n        setWeb3(web3);\n        setAccount(accounts[0]);\n\n        const id = await web3.eth.net.getId();\n\n        if (config.mode === \"development\") {\n          const id = await web3.eth.net.getId();\n\n          const contract = new web3.eth.Contract(\n            NFMintAbi.abi,\n            \"0xfc0918F42b7B6008A7Fb2dC7464bc6Ea6e871067\"\n          );\n\n          setNFMintContract(contract);\n        }\n\n        if (config.mode === \"production\") {\n          if (id != 4) {\n            setChainError(true);\n          } else {\n            const id = await web3.eth.net.getId();\n\n            const contract = new web3.eth.Contract(\n              NFMintAbi.abi,\n              \"0x46c9f3C031b79D2a9f9Ab3e416Eb19A91dd00e6D\"\n            );\n\n            setNFMintContract(contract);\n            setChainError(false);\n          }\n        }\n      }\n      if (!window.ethereum) {\n        const walletConnectProvider = await new WalletConnectProvider({\n          infuraId: \"3ee5b26be9d9451b96c018232c629555\",\n        });\n        await walletConnectProvider.enable();\n        const web3 = new Web3(walletConnectProvider);\n\n        const accounts = await web3.eth.getAccounts();\n\n        setWeb3(web3);\n        setAccount(accounts[0]);\n      }\n    } catch (error) {\n      alert(error.message);\n      console.log(error.message);\n      setLoadingNFTs(false);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        NFTs: NFTs,\n        showCreateModal,\n        web3,\n        chainError,\n        account,\n        NFMintContract,\n        loadingNFTs,\n      }}\n    >\n      <AppContextUpdate.Provider\n        value={{\n          handleCloseCreateModal,\n          handleShowCreateModal,\n          connectWallet,\n          NFMintContract,\n          setRand,\n        }}\n      >\n        {children}\n      </AppContextUpdate.Provider>\n    </AppContext.Provider>\n  );\n}\n\nexport default AppProvider;\n","export default () => {\n  return `${process.env.PUBLIC_URL}/img/ethereumlogo.png`;\n};\n","export const shortenAddress = (address) => {\n  return `${address.split(\"\").slice(0, 10).join(\"\")}....${address\n    .split(\"\")\n    .slice(address.length - 6, address.length - 1)\n    .join(\"\")}`;\n};\n\nexport const loadingJokes = () => {\n  return [\n    \"Hey, go grab a coffee or something😙\",\n    \"Nice, We are Creating History😌\",\n    \"Are you still here?😄\",\n    \"Where's the layer 2 solution already 🥲\",\n    \"This would have been really costly on the mainnet😂\",\n    \"Beginning Quantum Event👀\",\n    \"I need more gas fee!!\",\n    \"Fine I'm joking\",\n    \"I'm not joking\",\n    \"Gosh this is taking time, I need to sleep\",\n  ];\n};\n","// media queries\nconst size = {\n  xs: \"500px\",\n  smFinal: \"620px\",\n  sm: \"768px\",\n  lg: \"1200px\",\n  xl: \"3200px\",\n};\nexport default {\n  xs: `(max-width: ${size.xs})`,\n  smFinal: `(max-width: ${size.smFinal})`,\n  sm: `(max-width: ${size.sm})`,\n  lg: `(max-width: ${size.lg})`,\n  xl: `(max-width: ${size.xl})`,\n};\n","import React, { useContext } from \"react\";\nimport { AppContext, AppContextUpdate } from \"../context/AppProvider\";\nimport styled from \"styled-components\";\nimport getLogo from \"../functions/getLogo\";\nimport { shortenAddress } from \"../functions/utilities\";\nimport device from \"../styles/responsive\";\nfunction Navbar() {\n  const { handleShowCreateModal, connectWallet } = useContext(AppContextUpdate);\n  const { chainError, account } = useContext(AppContext);\n\n  return (\n    <>\n      {\" \"}\n      <Container>\n        {chainError && (\n          <div\n            style={{\n              backgroundColor: \"orange\",\n              color: \"white\",\n              textAlign: \"center\",\n              padding: \".5rem\",\n            }}\n          >\n            Please Select the Rinkeby Network\n          </div>\n        )}\n        <NavbarContainer>\n          <Logo>\n            <p>NFMint</p>\n            <img src={getLogo()} />\n          </Logo>\n          {/* <Title>MY NFTs</Title> */}\n          <AddNFT\n            onClick={() => {\n              if (chainError) {\n                alert(\"Please Select The Rinkeby Chain\");\n                return;\n              }\n              handleShowCreateModal();\n            }}\n          >\n            MINT NFT{\" \"}\n          </AddNFT>\n          {!account && <Connect onClick={connectWallet}>Connect </Connect>}\n          {chainError && (\n            <Connect style={{ backgroundColor: \"orange\", color: \"white\" }}>\n              {\" \"}\n              chain error{\" \"}\n            </Connect>\n          )}\n          {account && !chainError && (\n            <Account> {shortenAddress(account)}</Account>\n          )}\n        </NavbarContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default Navbar;\nconst Container = styled.div`\n  z-index: 50;\n  background-color: white;\n  width: 100%;\n  height: 6rem;\n  position: fixed;\n  border-bottom: var(--default-border);\n  top: 0;\n  margin-bottom: 0;\n\n  padding: 1rem var(--container-padding);\n`;\n\nconst NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  > p {\n    display: inline-block;\n    cursor: pointer;\n    font-size: 3.5rem;\n    font-weight: 700;\n    letter-spacing: 0.4rem;\n    color: var(--color-light-blue);\n    @media screen and ${device.sm} {\n      font-size: 20px;\n    }\n  }\n\n  > img {\n    display: inline-block;\n    width: 45px;\n    @media screen and ${device.sm} {\n      width: 30px;\n    }\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n  cursor: pointer;\n  transition: 0.2s all;\n  font-weight: bold;\n  color: var(--color-light-brown);\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport const Button = styled.button`\n  outline: none;\n  background-color: rgb(14, 100, 219);\n  color: white;\n  padding: 1.1rem 3rem;\n  border: none;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  transition: 0.2s all;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 4px 4px 3px rgba(0, 0, 0, 0.2);\n  }\n\n  &:active {\n    transform: scale(1);\n    box-shadow: none;\n  }\n`;\n\nexport const AddNFT = styled(Button)`\n  color: rgb(21, 113, 250);\n  border: 1px solid rgb(21, 113, 250);\n  background-color: white;\n\n  font-weight: bold;\n`;\nconst Connect = styled(Button)`\n  background-color: rgb(14, 100, 219);\n`;\nconst Account = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  @media screen and ${device.sm} {\n    font-size: 11px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport getLogo from \"../functions/getLogo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport device from \"../styles/responsive\";\nimport { AppContext, AppContextUpdate } from \"../context/AppProvider\";\n\nfunction NFTList() {\n  const { NFTs, chainError, account, loadingNFTs } = useContext(AppContext);\n  const { handleShowCreateModal } = useContext(AppContextUpdate);\n  return (\n    <>\n      {!loadingNFTs && NFTs.length === 0 && (\n        <div>\n          <p style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n            {\" \"}\n            You have no NFTs, You should Mint one yeah? 😌\n          </p>\n          <List>\n            <NFT\n              onClick={() => {\n                handleShowCreateModal();\n              }}\n            >\n              <div\n                style={{\n                  height: \"70%\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {\" \"}\n                <AddIcon style={{ fontSize: \"10rem\" }} />\n              </div>\n              <div className=\"details\">\n                <ContractName>NFMint</ContractName>\n                <NFTName>Create NFT</NFTName>\n              </div>\n            </NFT>\n          </List>\n        </div>\n      )}\n\n      {loadingNFTs && (\n        <List>\n          <div style={{ margin: \"1rem\" }}>\n            <Skeleton variant=\"rect\" width={300} height={118} />\n            <Skeleton />\n            <Skeleton />\n            <Skeleton height={50} />\n          </div>\n          <div style={{ margin: \"1rem\" }}>\n            <Skeleton variant=\"rect\" width={300} height={118} />\n            <Skeleton />\n            <Skeleton />\n            <Skeleton height={50} />\n          </div>\n          <div style={{ margin: \"1rem\" }}>\n            <Skeleton variant=\"rect\" width={300} height={118} />\n            <Skeleton />\n            <Skeleton />\n            <Skeleton height={50} />\n          </div>\n        </List>\n      )}\n      {!loadingNFTs && NFTs.length > 0 && (\n        <List>\n          <NFT onClick={() => handleShowCreateModal()}>\n            <div\n              style={{\n                height: \"70%\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <AddIcon style={{ fontSize: \"10rem\" }} color={\"red\"} />\n            </div>\n            <div className=\"details\">\n              <ContractName>NFMint</ContractName>\n              <NFTName>Create NFT</NFTName>\n            </div>\n          </NFT>\n\n          {NFTs.map(({ name, imageUrl }, index) => (\n            <NFT key={index}>\n              <Logo>\n                <img src={getLogo()} />\n              </Logo>\n              <img src={imageUrl} />\n              <div className=\"details\">\n                <ContractName>NFMint</ContractName>\n                <NFTName>{name}</NFTName>\n              </div>\n            </NFT>\n          ))}\n\n          {/* <NFT>\n            <Logo>\n              <img src={getLogo()} />\n            </Logo>\n            <img src={`${process.env.PUBLIC_URL}/img/profile.png`} />\n            <div className=\"details\">\n              <ContractName>NFTMint</ContractName>\n              <NFTName>NFT Name</NFTName>\n            </div>\n          </NFT> */}\n        </List>\n      )}\n    </>\n  );\n}\n\nexport default NFTList;\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const NFT = styled.div`\n  position: relative;\n  font-size: 1.2rem;\n  height: 23rem;\n  width: 17rem;\n  background-color: #deeaee;\n  transition: 0.2s all;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 6px;\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 3px 3px 4px rgba(0, 0, 0, 0.2);\n  }\n  &:not(:last-child) {\n    margin-right: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  > img {\n    width: 90%;\n    height: 70%;\n    object-fit: fill;\n  }\n  > .details {\n    padding: 1rem;\n    background-color: white;\n    width: 100%;\n    height: 30%;\n  }\n\n  @media only screen and ${device.sm} {\n    height: 25rem;\n    width: 23rem;\n  }\n  @media only screen and ${device.smFinal} {\n    height: 25rem;\n    width: 16rem;\n  }\n  @media only screen and ${device.xs} {\n    height: 25rem;\n    width: 27rem;\n  }\n`;\n\nconst Logo = styled.div`\n  position: absolute;\n\n  top: 2px;\n  right: 7px;\n  width: 30px;\n  height: 30px;\n\n  > img {\n    width: 30px;\n    background-color: transparent;\n    border-radius: 50%;\n    height: 30px;\n  }\n`;\nexport const ContractName = styled.div`\n  color: var(--color-light-brown);\n  font-weight: bold;\n`;\nexport const NFTName = styled.div`\n  color: var(--color-light-brown);\n  margin-top: 0.3rem;\n`;\n","import React, { useEffect, useRef } from \"react\";\n// listens clicks outside a Dom element, ignores dom elements passed as an array\nfunction useClickOutside(target, func) {\n  useEffect(() => {\n    let listener = (e) => {\n      if (!target.current?.contains(e.target)) {\n        func();\n      }\n    };\n\n    document.addEventListener(\"click\", listener);\n    console.log(listener);\n\n    return () => {\n      console.log(\"unmounting\");\n      document.removeEventListener(\"click\", listener, true);\n    };\n  }, [target]);\n}\n\nexport default useClickOutside;\n","// import IPFS from \"ipfs-mini\";\n\n// const ipfs = new IPFS({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n// });\n\n// const addData = (data) =>\n//   new Promise((resolve, reject) => {\n//     ipfs.add(data, (err, hash) => {\n//       if (!err) {\n//         const img = `https://ifps.infura.io/ipfs/${hash}`;\n//         resolve(img);\n//       } else {\n//         console.log(err);\n//         reject(err);\n//       }\n//     });\n//   });\n\n//\n\nimport { create } from \"ipfs-http-client\";\n\n/* Create an instance of the client */\nconst client = create(\"https://ipfs.infura.io:5001/api/v0\");\n\nconst addData = (data) => {\n  console.log(\"adding\");\n  return new Promise((resolve, reject) => {\n    client\n      .add(data)\n      .then((added) => {\n        const url = `https://ifps.infura.io/ipfs/${added.path}`;\n        resolve(url);\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nexport default addData;\n","import styled from \"styled-components\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { AppContext, AppContextUpdate } from \"../context/AppProvider\";\nimport { Button, AddNFT as Upload } from \"../components/Navbar\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport _ from \"lodash\";\nimport { NFT, ContractName, NFTName } from \"../components/NFTList\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport BarLoader from \"react-spinners/BarLoader\";\nimport useClickOutside from \"../hooks/useClickOutside\";\nimport addDataToIPFS from \"../functions/getIPFS\";\nimport device from \"../styles/responsive\";\nimport toast from \"react-hot-toast\";\n\nfunction CreateNFT() {\n  const { showCreateModal, NFMintContract, account, web3 } =\n    useContext(AppContext);\n  const [loadingJokes, setLoadingJokes] = useState([\n    \"Hey, go grab a coffee or something😙\",\n    \"Nice, We are Creating History 😌\",\n    \"Are you still here? 😄\",\n    \"Where's the layer 2 solution already 🥲\",\n    \"This would have been really costly on the mainnet 😂\",\n    \"Beginning Quantum Event👀\",\n    \"I need more gas fee!!\",\n    \"Fine I'm joking\",\n    \"Exploiting Gateway to Nirvana !! 🏃🏾‍♂️\",\n    \"This shouldn't take too much time 🌚\",\n    \"Sell this for 7Eth okay? 🌚\",\n    \"Wow what a nice picture !! 🤩\",\n\n    \"Gosh this is taking time, I need to sleep\",\n  ]);\n  const { handleCloseCreateModal, setRand } = useContext(AppContextUpdate);\n  const [hash, setHash] = useState(\"\");\n  const [showApproveModal, setShowApproveModal] = useState(false);\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [formError, setFormError] = useState(false);\n  const [transactionSent, setTransactionSent] = useState(false);\n  const [showJokes, setShowJokes] = useState(false);\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [joke, setJoke] = useState(\"Alright Beginning the Transaction now 🙂\");\n\n  const [form, setForm] = useState({\n    name: \"\",\n    description: \"\",\n    properties: {},\n  });\n\n  const [completed, setCompleted] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [jsx, setJsx] = useState([]);\n\n  const modal = useRef(null);\n  const close = useRef(null);\n  const upload = useRef(null);\n  const toIgnore = useRef([]);\n\n  //   useClickOutside(modal, () => handleCloseCreateModal());\n\n  useEffect(() => {\n    if (image) {\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n\n      reader.onprogress = () => {\n        setUploadProgress(true);\n      };\n\n      reader.onloadend = () => {\n        setPreview(reader.result);\n        setUploadProgress(false);\n      };\n    }\n  }, [image]);\n  const onInputChange = ({ target }) => {\n    const { value, name } = target;\n    setForm((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const renderJokes = () => {\n    setInterval(() => {\n      const number = Math.floor(Math.random() * loadingJokes.length);\n      setJoke(loadingJokes[number]);\n    }, 10000);\n  };\n\n  const handleCreateNFT = async () => {\n    if (!form.name || !form.description || preview === null) {\n      setFormError(true);\n      setFormErrorMessage(\"Please fill in all fields.\");\n      setTimeout(() => {\n        setFormError(false);\n      }, 5000);\n      return;\n    }\n    // add nft metadata to ipfs\n    setShowApproveModal(true);\n    setLoading(true);\n    addDataToIPFS(image)\n      .then((url) => {\n        const NFTMetadata = {\n          name: form.name,\n          description: form.description,\n          imageUrl: url,\n        };\n        renderJokes();\n        NFMintContract.methods\n          .addCollectible(JSON.stringify(NFTMetadata), account)\n          .send({\n            from: account,\n            gasPrice: web3.utils.toWei(\"120\", \"Gwei\"),\n          })\n          .on(\"transactionHash\", (hash) => {\n            console.log(hash);\n            setTransactionSent(true);\n            setHash(hash);\n          })\n          .then((result) => {\n            setRand(Math.random() * 40000000);\n            setTimeout(() => {\n              setShowApproveModal(false);\n              handleCloseCreateModal(true);\n            }, 4000);\n            setLoading(false);\n            toast.success(\"NFT created successfully\");\n\n            console.log(result);\n          })\n          .catch((err) => {\n            toast.error(\"An Error Occured\");\n            clearInterval(renderJokes);\n            setShowApproveModal(false);\n            // setLoading(false);\n          });\n\n        console.log(JSON.stringify(NFTMetadata));\n      })\n      .catch((err) => {\n        console.log(err);\n        setFormError(true);\n        setFormErrorMessage(\n          \"An error ocurred, please check your internet connection and try again.\"\n        );\n        setShowApproveModal(false);\n        setTimeout(() => {\n          setFormError(false);\n          setFormErrorMessage(\"\");\n        }, 3000);\n      });\n\n    //\n  };\n\n  return (\n    <>\n      {showApproveModal && (\n        <ConfirmationContainer>\n          <ConfirmationContent onClick={() => renderJokes()}>\n            <p className=\"header\">Creating NFT</p>\n\n            <p className=\"message\">Please Approve the transaction </p>\n            {loading && (\n              <div className=\"loader\">\n                <p\n                  style={{\n                    marginRight: \"1.5rem\",\n                    color: \"blue\",\n                    transtion: \".3s all\",\n                  }}\n                >\n                  {joke}\n                </p>\n                <p style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\n                  <ClipLoader size={20} color=\"rgb(21, 113, 250)\" />\n                </p>\n              </div>\n            )}\n\n            {!loading && (\n              <p className=\"loader\">\n                <p\n                  style={{\n                    marginRight: \"1.5rem\",\n                    color: \"blue\",\n                    transtion: \".3s all\",\n                  }}\n                >\n                  {\"TRANSACTION SUCCESSFUL!\"}{\" \"}\n                </p>\n                <p style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\n                  <CheckIcon\n                    style={{\n                      fontSize: \"4rem\",\n                      color: \"green\",\n                      fontWeight: \"bold\",\n                    }}\n                  />\n                </p>\n              </p>\n            )}\n            {transactionSent && (\n              <p>\n                <a\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  href={`https://rinkeby.etherscan.io/tx/${hash}`}\n                >\n                  Check Progress\n                </a>{\" \"}\n              </p>\n            )}\n            <p className=\"footer\">Waiting For blockchain confirmation</p>\n          </ConfirmationContent>\n        </ConfirmationContainer>\n      )}\n\n      <Container>\n        <Content ref={modal}>\n          {formError && (\n            <div\n              style={{\n                backgroundColor: \"orange\",\n                color: \"white\",\n                padding: \"1.3rem\",\n                borderRadius: \"8px\",\n                marginBottom: \"1rem\",\n              }}\n            >\n              {formErrorMessage}\n            </div>\n          )}\n          <Title>\n            <h1>Create NFT</h1>\n            <Close onClick={handleCloseCreateModal} fontSize={\"large\"} />\n          </Title>\n          <Body>\n            {!preview && (\n              <InputContainer>\n                <Label>\n                  Upload Image <sup style={{ color: \"red\" }}>*</sup>\n                </Label>\n                <UploadImage>\n                  <p style={{ marginBottom: \"2rem\" }}>PNG, JPG</p>\n                  <Upload\n                    onClick={() => upload.current.click()}\n                    style={{ marginLeft: 0 }}\n                  >\n                    Choose Image\n                  </Upload>\n                  <input\n                    onChange={(e) => {\n                      setImage(e.target.files[0]);\n                    }}\n                    style={{ opacity: 0 }}\n                    ref={upload}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    id=\"upload\"\n                  />\n                </UploadImage>\n              </InputContainer>\n            )}\n\n            {!preview && uploadProgress && (\n              <div>\n                <ClipLoader />\n              </div>\n            )}\n\n            {preview && (\n              <InputContainer>\n                <Label> Preview</Label>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <NFT>\n                    <div\n                      onClick={() => {\n                        setPreview(null);\n                      }}\n                      onMouseOver={(e) => {\n                        console.log(e);\n                        e.target.style.backgroundColor = \"rgba(0,0,0, .2)\";\n                        close.current.style.color = \"white\";\n                        close.current.style.opacity = \"1\";\n                      }}\n                      onMouseLeave={(e) => {\n                        console.log(e);\n                        e.target.style.backgroundColor = \"transparent\";\n                        close.current.style.opacity = \"0\";\n                      }}\n                      style={{\n                        height: \"70%\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <CloseIcon\n                        ref={close}\n                        style={{\n                          fontSize: \"10rem\",\n                          position: \"absolute\",\n                          opacity: 0,\n                        }}\n                      />\n                      <img\n                        style={{\n                          width: \"90%\",\n                          height: \"70%\",\n                          objectFit: \"cover\",\n                        }}\n                        src={preview}\n                      />\n                    </div>\n                    <div className=\"details\">\n                      <ContractName>NFTMint</ContractName>\n                      <NFTName>Create NFT</NFTName>\n                    </div>\n                  </NFT>\n                </div>\n              </InputContainer>\n            )}\n            <InputContainer>\n              <Label>\n                Name <sup style={{ color: \"red\" }}>*</sup>\n              </Label>\n              <Input\n                onChange={onInputChange}\n                name=\"name\"\n                value={form.name}\n                placeholder=\"Enter NFT's Name\"\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>\n                Description <sup style={{ color: \"red\" }}>*</sup>\n              </Label>\n              <TextArea\n                onChange={onInputChange}\n                name=\"description\"\n                value={form.description}\n                cols=\"40\"\n                rows=\"4\"\n                placeholder=\"Enter the NFT's Description\"\n              />\n            </InputContainer>\n            {/* <InputContainer>\n              <Label>Properties</Label>\n              <>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  <Input\n                    onChange={onPropertyInput}\n                    data-id=\"0\"\n                    name=\"property\"\n                    placeholder=\"Property\"\n                    style={{ marginRight: \"1rem\" }}\n                  />\n                  <Input\n                    onChange={onPropertyInput}\n                    data-id=\"0\"\n                    name=\"value\"\n                    placeholder=\"Value\"\n                  />\n                </div>\n               \n              </>\n            </InputContainer> */}\n\n            <Button onClick={handleCreateNFT} style={{ marginTop: \"2rem\" }}>\n              Create\n            </Button>\n          </Body>\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nexport default CreateNFT;\n\nconst Container = styled.div`\n  font-size: 1.4rem;\n  position: fixed;\n\n  transition: 0.3s all;\n  background-color: rgba(0, 0, 0, 0.7);\n  top: 0;\n  z-index: 70;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  background-color: white;\n\n  width: 50rem;\n  height: 90%;\n  overflow: scroll;\n  border-radius: 10px;\n  padding: 2.5rem 2.5rem;\n  padding-bottom: 9rem;\n\n  @media screen and ${device.sm} {\n    width: 90%;\n  }\n`;\n\nconst Title = styled.div`\n  display: flex;\n\n  background-color: white;\n  width: 100%;\n  margin-bottom: 3rem;\n  justify-content: space-between;\n  > h1 {\n    color: var(--color-light-brown);\n  }\n`;\nconst Close = styled(CloseIcon)`\n  cursor: pointer;\n`;\n\nconst Body = styled.div`\n  margin-top: 2.5rem;\n`;\n\nconst InputContainer = styled.div`\n  margin-bottom: 2rem;\n`;\nconst Label = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst Input = styled.input`\n  padding: 1.1rem;\n  outline: none;\n  width: 100%;\n  border-radius: 9px;\n  border: var(--light-border);\n\n  &:hover {\n    border: 1px solid var(--color-light-blue);\n  }\n`;\n\nconst TextArea = styled.textarea`\n  padding: 1.1rem;\n  outline: none;\n  width: 100%;\n  border-radius: 9px;\n  border: var(--light-border);\n\n  &:hover {\n    border: 1px solid var(--color-light-blue);\n  }\n`;\nconst UploadImage = styled.div`\n  border: 1px dotted rgba(0, 0, 0, 0.3);\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ConfirmationContainer = styled(Container)`\n  z-index: 100;\n`;\n\nconst ConfirmationContent = styled(Content)`\n  width: 35rem;\n  height: 40%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and ${device.sm} {\n    width: 90%;\n  }\n\n  > .header {\n    font-size: 2.5rem;\n  }\n\n  > p {\n    color: var(--color-light-brown);\n  }\n\n  > .footer {\n    text-transform: uppercase;\n    font-size: \"2.5rem\";\n  }\n`;\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport NFTList from \"./NFTList\";\nimport { AppContext, AppContextUpdate } from \"../context/AppProvider\";\nimport device from \"../styles/responsive\";\n\nfunction NFTDisplay() {\n  const searchBar = useRef(null);\n  const [showCategory, setShowCategory] = useState(false);\n  const [category, setCategory] = useState(\"\");\n  const { account, chainError } = useContext(AppContext);\n  return (\n    <Container>\n      {account && (\n        <Top>\n          <SearchBar ref={searchBar}>\n            <IconSearch fontSize={\"large\"} />\n            <input\n              onFocus={() => {\n                searchBar.current.style.border = \"1px solid rgb(21, 113, 250)\";\n              }}\n              onBlur={() => {\n                searchBar.current.style.border = \"1px solid rgba(0, 0, 0, 0.1)\";\n              }}\n              type=\"text\"\n              placeholder=\"Search\"\n            />\n          </SearchBar>\n          <FilterBar onClick={() => setShowCategory(!showCategory)}>\n            <p>{!category ? \"Category\" : category}</p>\n            <Expand />\n\n            {showCategory && (\n              <FilterOptions>\n                {[\"most recent\"].map((el, index) => (\n                  <p\n                    style={{\n                      color: el == category && \"rgb(21, 113, 250)\",\n                    }}\n                    onClick={() => setCategory(el)}\n                  >\n                    {el}\n                  </p>\n                ))}\n              </FilterOptions>\n            )}\n          </FilterBar>\n        </Top>\n      )}\n      {account && (\n        <Content>\n          <NFTList />\n        </Content>\n      )}\n      {!account && (\n        <ConnectAccount>Please Connect Your Account To NFMint</ConnectAccount>\n      )}\n    </Container>\n  );\n}\n\nexport default NFTDisplay;\n\nconst ConnectAccount = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n  font-size: 1.6rem;\n  color: var(--color-light-brown);\n`;\n\nconst Container = styled.div`\n  font-size: var(--default-font-size);\n  margin: 2rem var(--container-padding);\n  padding: 4rem 4rem;\n\n  position: relative;\n  border: var(--light-border);\n`;\n\nconst Top = styled.div`\n  display: flex;\n`;\n\nconst SearchBar = styled.div`\n  border: var(--light-border);\n  width: 80%;\n  padding: 0.7rem 2rem;\n  margin-right: 1.5rem;\n  display: flex;\n  transition: 0.2s all;\n  > input {\n    border: none;\n    margin-left: 1rem;\n    width: 100%;\n    outline: none;\n\n    &:focus SearchBar {\n      background-color: red;\n    }\n  }\n`;\n\nconst IconSearch = styled(SearchIcon)`\n  color: var(--color-light-brown);\n`;\n\nconst FilterBar = styled.div`\n  position: relative;\n  border: var(--light-border);\n  z-index: 0;\n  padding: 0.7rem 2rem;\n  cursor: pointer;\n  width: 15%;\n  display: flex;\n  align-items: center;\n  &:hover {\n    color: var(--color-light-blue);\n  }\n\n  @media screen and ${device.sm} {\n    display: none;\n  }\n  > p {\n    font-size: 1.3rem;\n  }\n`;\n\nconst Expand = styled(ExpandMoreIcon)`\n  color: var(--color-light-brown);\n  margin-left: auto;\n`;\n\nconst FilterOptions = styled.div`\n  z-index: 40;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  border: var(--light-border);\n  width: 100%;\n  background-color: white;\n  padding: 2rem;\n  box-shadow: 3px 3px 7px var(--color-light-brown);\n\n  > p {\n    &:hover {\n      color: var(--color-light-blue);\n    }\n    color: var(--color-light-brown);\n    &:not(:last-child) {\n      margin-bottom: 1.3rem;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  margin-top: 2.9rem;\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport NFTDisplay from \"../components/NFTDisplay\";\nimport CreateNFT from \"../components/CreateNFT\";\nimport { AppContext, AppContextUpdate } from \"../context/AppProvider\";\nimport { shortenAddress } from \"../functions/utilities\";\nfunction Home() {\n  const { showCreateModal, account } = useContext(AppContext);\n  return (\n    <>\n      <HomeContainer>\n        {showCreateModal && <CreateNFT />}\n        <ProfileContainer>\n          <div>\n            <Img src={`${process.env.PUBLIC_URL}/img/profile.png`} />\n\n            {account && (\n              <Address>\n                <span>{shortenAddress(account)}</span> <CopyIcon />\n              </Address>\n            )}\n          </div>\n        </ProfileContainer>\n\n        <Content>\n          <NFTDisplay />\n        </Content>\n      </HomeContainer>\n    </>\n  );\n}\n\nconst HomeContainer = styled.div``;\n\nconst ProfileContainer = styled.div`\n  background: -webkit-gradient(\n      linear,\n      left bottom,\n      left top,\n      from(hsla(0, 0%, 100%, 0.85)),\n      to(hsla(0, 0%, 100%, 0.85))\n    ),\n    #93c5fe;\n  background: -webkit-linear-gradient(\n      bottom,\n      hsla(0, 0%, 100%, 0.85),\n      hsla(0, 0%, 100%, 0.85)\n    ),\n    #93c5fe;\n  background: linear-gradient(\n      0deg,\n      hsla(0, 0%, 100%, 0.85),\n      hsla(0, 0%, 100%, 0.85)\n    ),\n    #93c5fe;\n  position: absolute;\n  left: 0;\n  /* top: 6rem; */\n  width: 100%;\n  height: 200px;\n  border-radius: 0 0 100px 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 3rem;\n\n  > div {\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n    margin-top: 15rem;\n  }\n`;\n\nconst Content = styled.div`\n  position: relative;\n  top: 35rem;\n`;\n\nconst Img = styled.img`\n  width: 14rem;\n\n  height: 14rem;\n  cursor: pointer;\n\n  border-radius: 50%;\n\n  -webkit-object-fit: cover;\n  object-fit: cover;\n`;\n\nconst Address = styled.p`\n  font-size: 2rem;\n  margin-top: 1.5rem;\n  cursor: pointer;\n`;\n\nconst CopyIcon = styled(FileCopyIcon)`\n  color: rgba(0, 0, 0, 0.3);\n`;\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport CreateNFT from \"./components/CreateNFT\";\nimport Navbar from \"./components/Navbar\";\nimport AppProvider from \"./context/AppProvider\";\nimport imgLink from \"./functions/getIPFS\";\nimport Home from \"./pages/Home\";\nimport { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  // useEffect(() => {\n  //   imgLink().then((result) => console.log(result));\n  // }, []);\n\n  return (\n    <AppProvider>\n      <Toaster />\n\n      <AppComponent>\n        <Navbar />\n        <Home />\n      </AppComponent>\n    </AppProvider>\n  );\n}\n\nexport default App;\n\nconst AppComponent = styled.div`\n  position: relative;\n  height: 400rem;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}